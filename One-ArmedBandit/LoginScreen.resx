<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>